<!--?xml version="1.0" encoding="UTF-8" ?-->
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ls.gpis.framework.companyInfo">
    <!-- 게시물 리스트를 반환한다. -->
    <select id="selectCompanyInfoList" resultType="hashmap" parameterType="hashmap" >
        
        SELECT 
                COM.COMPANY_ID,
                COM.CORPORATE_ID,
                COM.WORKPLACE_ID,      
                COM.COMPANY_CODE,
                COM.COMPANY_NAME,   
                COM.REPRESENTATIVE,
                COM.COMPANY_REGIST_NO,
                COM.INDUSTRY_CONDTION,
                COM.INDUSTRY_TYPE,
                COM.ADDRESS,
                COM.TEL_NO,
                COM.COUNTRY,      
                COM.BUY_SCALE,
                CO.CORPORATE_NAME,      
                COM.MANAGER,
                COM.MANAGER_TEL,
                COM.CREDIT_NAME,
                COM.CREDIT_GRADE,
                COM.BUY_SCALE
            FROM COMPANY COM
            INNER JOIN CORPORATE CO ON CO.CORPORATE_ID = COM.CORPORATE_ID   
            WHERE 1 = 1 
            <if test='COMPANY_NAME != "" and COMPANY_NAME != null' >
                and COM.COMPANY_NAME like '%' + #{COMPANY_NAME} +'%'
            </if>
            <if test='CORPORATE_NAME != "" and CORPORATE_NAME != null' >
                and CO.CORPORATE_NAME like '%'+#{CORPORATE_NAME}+'%'
            </if>
            <if test='COMPANY_CODE != "" and COMPANY_CODE != null' >
                AND COM.COMPANY_CODE = #{COMPANY_CODE}
            </if>
            <if test='CORPORATE_ID != "" and CORPORATE_ID != null' >
                AND CO.CORPORATE_ID = #{CORPORATE_ID}
            </if>

    </select>
    <select id="selectCompanyInfoListScore" resultType="hashmap" parameterType="hashmap" >
    SELECT (
    SELECT SUM(SCORE) SCORE FROM COMPANY_ESTIMATION WHERE CORPORATE_ID = #{CORPORATE_ID} AND
		COMPANY_CODE = #{COMPANY_CODE}
		) AS SCORE , 
                (SELECT COUNT(*) FROM BUY_LIST AA WHERE AA.CORPORATE_ID = #{CORPORATE_ID} AND AA.IN_COMPANY_CODE = #{COMPANY_CODE}) AS BUYCOUNT
    </select>

    <select id="selectCompanyInfoListNew" resultType="hashmap" parameterType="hashmap" >
        
        SELECT 
                COM.COMPANY_ID,
                COM.CORPORATE_ID,
                COM.WORKPLACE_ID,      
                COM.COMPANY_CODE,
                COM.COMPANY_NAME,   
                COM.REPRESENTATIVE,
                COM.COMPANY_REGIST_NO,
                COM.INDUSTRY_CONDTION,
                COM.INDUSTRY_TYPE,
                COM.ADDRESS,
                COM.TEL_NO,
                COM.COUNTRY,      
                COM.BUY_SCALE,
                CO.CORPORATE_NAME,      
                COM.MANAGER,
                COM.MANAGER_TEL,
                COM.CREDIT_NAME,
                COM.CREDIT_GRADE,
                COM.BUY_SCALE,
                (SELECT SUM(SCORE)  FROM COMPANY_ESTIMATION WHERE CORPORATE_ID = COM.CORPORATE_ID AND
		COMPANY_CODE = COM.COMPANY_CODE ) AS SCORE , 
                (SELECT COUNT(*) FROM BUY_LIST AA WHERE AA.CORPORATE_ID = COM.CORPORATE_ID AND AA.IN_COMPANY_CODE = COM.COMPANY_CODE) AS BUYCOUNT 
            FROM COMPANY COM
            INNER JOIN CORPORATE CO ON CO.CORPORATE_ID = COM.CORPORATE_ID   
            WHERE 1 = 1 
            <if test='COMPANY_NAME != "" and COMPANY_NAME != null' >
                and COM.COMPANY_NAME like '%' + #{COMPANY_NAME} +'%'
            </if>
            <if test='CORPORATE_NAME != "" and CORPORATE_NAME != null' >
                and CO.CORPORATE_NAME like '%'+#{CORPORATE_NAME}+'%'
            </if>
            <if test='COMPANY_CODE != "" and COMPANY_CODE != null' >
                AND COM.COMPANY_CODE = #{COMPANY_CODE}
            </if>
            <if test='CORPORATE_ID != "" and CORPORATE_ID != null' >
                AND CO.CORPORATE_ID = #{CORPORATE_ID}
            </if>

    </select>

    <select id="coperList" resultType="hashmap" >
        select '전체' CORPORATE_NAME, '' CORPORATE_ID
        union all
        select CORPORATE_NAME , CORPORATE_ID
            from CORPORATE
            group by CORPORATE_NAME,CORPORATE_ID
    </select>

    <!-- 업체평가 그래프 -->
    <select id="estimationGraph" resultType="hashmap" parameterType="hashmap">
        SELECT 
            YEAR AS ITEM , 
            ROUND(AVG(SCORE),2) AS VALUE
        FROM COMPANY_ESTIMATION COME
        WHERE 1=1 AND RATING_ITEM IS NOT NULL
        AND YEAR IS NOT NULL           
        AND RATING_ITEM LIKE '%총점%'
        AND COME.COMPANY_CODE = #{COMPANY_CODE}
        AND COME.CORPORATE_ID = #{CORPORATE_ID}
        GROUP BY YEAR
        ORDER BY YEAR;
                
    </select>

    <!-- 업체평가 리스트 -->
    <select id="estimationList" resultType="hashmap" parameterType="hashmap">
        SELECT 
            RATING_ITEM , 		
            YEAR AS ITEM , 
            DISTRIBUTE,
            SCORE
        FROM COMPANY_ESTIMATION COME
        WHERE 1=1
        AND COME.COMPANY_CODE = #{COMPANY_CODE}
        AND COME.CORPORATE_ID = #{CORPORATE_ID}
        AND COME.YEAR = #{SYEAR}
    </select>
    
    <!-- 이슈리스트 -->
    <select id="selectIssueList" resultType="hashmap" parameterType="hashmap">
        select *
          from COMPANY_ISSUE COME
          where COME.COMPANY_CODE = #{COMPANY_CODE}
          AND COME.CORPORATE_ID = #{CORPORATE_ID}
    </select>

    <update id="updateIssue" parameterType="map">

	   MERGE INTO COMPANY_ISSUE CE
        USING(SELECT #{COMPANY_ISSUE_ID} COMPANY_ISSUE_ID) SRC ON (CE.COMPANY_ISSUE_ID = SRC.COMPANY_ISSUE_ID)
	   WHEN MATCHED THEN
		  UPDATE 
             SET CONTENT = #{CONTENT},
                UPDATE_DATE = GETDATE(), 
                UPDATE_ID = #{UPDATER_ID}
	   WHEN NOT MATCHED THEN
	    INSERT (CORPORATE_ID, COMPANY_CODE,CONTENT,CREATED_DATE, CREATER_ID)
		VALUES(#{CORPORATE_ID}, #{COMPANY_CODE}, #{CONTENT}, GETDATE(),  #{CREATER_ID});
    
	</update>

    <delete id="deleteIssue" parameterType="map">

	   delete
         from COMPANY_ISSUE
         where COMPANY_ISSUE_ID = #{COMPANY_ISSUE_ID}
    
	</delete>
</mapper>
