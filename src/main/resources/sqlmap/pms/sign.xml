<!--?xml version="1.0" encoding="UTF-8" ?-->
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ls.gpis.framework.sign">


	<!--신규 결재정보를 등록한다-->
	<insert id="insertSign" parameterType="com.ls.gpis.dto.SignDTO">
		<selectKey keyProperty="SIGN_ID" resultType="int" order="BEFORE">
            SELECT ISNULL(MAX(SIGN_ID), 0) + 1
              FROM CMT_EMP_SIGN
        </selectKey>
		INSERT INTO CMT_EMP_SIGN(				
				SIGN_ID,
				EMP_USER_ID,
				SIGN_NAME		,
				ACTV	,
				CREATED_DATE,	
				CREATER_ID
				)
		VALUES(
			    #{SIGN_ID},
				#{EMP_USER_ID},
				#{SIGN_NAME},
				'Y',
	   			GETDATE(),
				#{CREATER_ID}
				)		
	</insert>

	<!--신규 결재자정보를 등록한다-->
	<insert id="insertSignMember" parameterType="hashmap">
		INSERT INTO CMT_EMP_SIGN_MAP(				
				SIGN_ID,
				EMP_USER_ID		,
				ORDER_NUM,	
				SIGN_USER_ID		,		
				CREATED_DATE,	
				CREATER_ID
				)
		VALUES(
			    #{SIGN_ID},
				#{EMP_USER_ID},
				#{ORDER_NUM},	
				#{SIGN_USER_ID},		
	   			GETDATE(),
				#{CREATER_ID}
				)		
	</insert>

	<!--결재정보를 수정한다-->
	<update  id="updateSign" parameterType="com.ls.gpis.dto.SignDTO">
		UPDATE	dbo.CMT_EMP_SIGN 
			SET
				SIGN_NAME = #{SIGN_NAME}, 
				CREATED_DATE = GETDATE(), 
				CREATER_ID = #{CREATER_ID} 
		  WHERE
				SIGN_ID = #{SIGN_ID} AND EMP_USER_ID = #{EMP_USER_ID}
	</update>

	<!--결재자정보를 수정한다-->
	<update  id="updateSignMember" parameterType="com.ls.gpis.dto.SignDTO">
		UPDATE	dbo.CMT_EMP_SIGN_MAP 
			SET
				EMP_USER_ID = #{EMP_USER_ID}, 	
				ORDER_NUM = #{ORDER_NUM},	
				SIGN_USER_ID = #{SIGN_USER_ID},				
				CREATED_DATE = GETDATE(), 
				CREATER_ID = #{CREATER_ID} 
		  WHERE
				SIGN_ID = #{SIGN_ID} AND EMP_USER_ID = #{EMP_USER_ID}
	</update>
	
	<!--결재정보를 삭제한다-->
	<delete  id="deleteSign">
		DELETE FROM dbo.CMT_EMP_SIGN WHERE SIGN_ID = #{signId}
	</delete>

	<!--결재자정보를 삭제한다-->
	<delete  id="deleteSignMember" parameterType="com.ls.gpis.dto.SignDTO">
		DELETE FROM dbo.CMT_EMP_SIGN_MAP WHERE SIGN_ID = #{SIGN_ID} AND EMP_USER_ID = #{EMP_USER_ID} AND SIGN_USER_ID = #{SIGN_USER_ID}
	</delete>

	<!--결재자정보를 삭제한다-->
	<delete  id="deleteSignMemberList" parameterType="com.ls.gpis.dto.SignDTO">
		DELETE FROM dbo.CMT_EMP_SIGN_MAP WHERE SIGN_ID = #{signId}
	</delete>

	<!--메뉴별 결제 정보를 갱신한다.-->
	<update id="updateMenuSignList" parameterType="map">

       MERGE INTO CMT_SIGN_MENU_MAP CSMM
       USING(SELECT #{empUserId} EMP_USER_ID, #{MENU_ID} MENU_ID) SRC  ON (CSMM.EMP_USER_ID = SRC.EMP_USER_ID AND  CSMM.MENU_ID = SRC.MENU_ID)
	   WHEN MATCHED THEN
		  UPDATE 
             SET SIGN_ID = #{SIGN_ID}		            
	   WHEN NOT MATCHED THEN
	    INSERT (EMP_USER_ID, MENU_ID, SIGN_ID, CREATED_DATE, CREATER_ID)
		VALUES(#{empUserId}, #{MENU_ID}, #{SIGN_ID}, GETDATE(), #{CREATER_ID});

	</update>


	<!--전체 메뉴정보를 반환한다.-->
	<select id="selectSignList"  resultType="com.ls.gpis.dto.SignDTO">
		SELECT
			SIGN_ID,
			EMP_USER_ID,
			SIGN_NAME		,
			ACTV	,
			CREATED_DATE,	
			CREATER_ID
		FROM dbo.CMT_EMP_SIGN 	  		 
		WHERE EMP_USER_ID = #{empUserId} 	
		ORDER BY SIGN_ID ASC
	</select>

	<!--전체 결재자정보를 반환한다.-->
	<select id="selectSignMemberList"  resultType="hashmap">
		SELECT
				CESN.SIGN_ID,
				CE.EMP_USER_ID,
				CESN.ORDER_NUM,
				CE.EMP_NAME,
        		CE.DEPT_NAME,			
				CESN.CREATED_DATE,	
				CESN.CREATER_ID
		  FROM
				dbo.CMT_EMP_SIGN_MAP CESN		
				LEFT JOIN CMT_EMP CE ON CE.EMP_USER_ID = CESN.SIGN_USER_ID               
  		  WHERE SIGN_ID = #{signId} 
			ORDER BY SIGN_ID ASC		  
	</select>
</mapper>

